name: CI

on:
  pull_request:
    branches:
    - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        poetry env use 3.12
        poetry install --no-interaction --no-root --only lint
    - name: Lint with ruff
      run: |
        poetry run ruff check --output-format=github .

  format:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        poetry env use 3.12
        poetry install --no-interaction --no-root --only lint
    - name: Format with ruff
      run: |
        poetry run ruff format --diff .

  lint_docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install dependencies
      run: |
        poetry env use 3.12
        poetry install --no-interaction --no-root --only lint
    - name: Lint with darglint
      run: |
        poetry run darglint --verbosity 2 --docstring-style sphinx -z long conduit

  test_minimal_dependencies:
    needs: [lint, format, lint_docs]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    # We are verifying here that it's possible to to import `EcoacousticsDataModule`
    # when basically only the audio dependencies are installed.
    - name: Install minimal dependencies
      run: |
        poetry env use 3.10
        poetry install --no-interaction --no-root --with torchcpu --without dev,test,typecheck,lint
    - name: Verify audio datamodule can be imported
      run: |
        poetry run python -c "from conduit.data.datamodules.audio import EcoacousticsDataModule"
  ci_suite:
    needs: [lint, format, lint_docs]
    runs-on: ubuntu-latest
    steps:
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'poetry'
    #----------------------------------------------
    # install dependencies
    #----------------------------------------------
    - name: Install dependencies
      run: |
        poetry env use 3.10
        poetry install --no-interaction --no-root --all-extras --with torchcpu --without lint
    - name: Set python path for all subsequent actions
      run: echo "$(poetry env info --path)/bin" >> $GITHUB_PATH
    #----------------------------------------------
    # type check
    #----------------------------------------------
    - uses: jakebailey/pyright-action@v1
      with:
        # don't show warnings
        level: error
    #----------------------------------------------
    # run tests
    #----------------------------------------------
    - name: Test with pytest
      run: |
        poetry run python -m pytest -vv tests/
    # - name: Run configen
    #   run: |
    #     poetry run sh generate_confs.sh
