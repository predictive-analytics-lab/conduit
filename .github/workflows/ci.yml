name: CI

on:
  pull_request:
    branches:
    - main

jobs:
  linters:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install isort black darglint
    - name: Format with black
      run: |
        python -m black --check .
    - name: Format with isort
      run: |
        isort --check --diff .
    - name: Lint with darglint
      run: |
        darglint --verbosity 2 --docstring-style sphinx -z long conduit
  ci_suite:
    needs: [linters]
    runs-on: ubuntu-latest
    steps:
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - uses: actions/checkout@v3
    - name: Install poetry
      run: pipx install poetry
    - uses: actions/setup-python@v4
      with:
        python-version: '3.8'
        cache: 'poetry'
    #----------------------------------------------
    # install dependencies
    #----------------------------------------------
    - name: Install dependencies
      run: |
        poetry env use 3.8
        poetry install --no-interaction --no-root --with fair
    # - name: Setup node.js (for pyright)
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: "14"
    # - name: Run type checking
    #   run: |
    #    npm install -g pyright
    #    pyright conduit
    #    pyright tests
    - name: Test with pytest
      run: |
        poetry run python -m pytest -vv tests/
    # - name: Run configen
    #   run: |
    #     poetry run sh generate_confs.sh
