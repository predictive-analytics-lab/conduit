name: CI

on:
  pull_request:
    branches:
    - main
  schedule:  # Scheduled workflows run on the latest commit on the default or base branch
    - cron: '0 4 */3 * *'  # Run every 3 days at 4am

jobs:
  ci_suite:
    runs-on: ubuntu-latest
    steps:
    #----------------------------------------------
    #       check-out repo and set-up python
    #----------------------------------------------
    - name: Check out repository
      uses: actions/checkout@v2
    - name: Set up Python 3.7
      uses: actions/setup-python@v2
      with:
        python-version: 3.7
    #----------------------------------------------
    #  -----  install & configure poetry  -----
    #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1.2
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    #----------------------------------------------
    #       load cached venv if cache exists
    #----------------------------------------------
    - name: Set up Poetry cache for Python dependencies
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv2-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    #----------------------------------------------
    # install dependencies if cache does not exist
    #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root -E all
    - name: Format with black
      run: |
        poetry run python -m black --check .
    - name: Format with isort
      run: |
        poetry run isort --check --diff .
    # - name: Setup node.js (for pyright)
    #   uses: actions/setup-node@v1
    #   with:
    #     node-version: "14"
    # - name: Run type checking
    #   run: |
    #    npm install -g pyright
    #    pyright conduit
    #    pyright tests
    - name: Test with pytest
      if: (github.event_name != 'schedule') # for pull requests
      run: |
        poetry run python -m pytest -vv tests/
    - name: Test with pytest (slow)
      if: (github.event_name == 'schedule') # for schedule event
      # poetry run python -m pytest -vv --runslow tests/
      run: |
        poetry run python -m pytest -vv tests/
    - name: Run configen
      run: |
        source .venv/bin/activate
        sh generate_confs.sh
